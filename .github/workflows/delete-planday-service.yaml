name: "Delete Planday's dynamic environment: The Octopus release and its associated resources in Kubernetes"

on:
  workflow_dispatch:
    inputs:
      delete:
        type: choice
        required: true
        description: "Confirm the deletion of the dynamic environment"
        options:
        - 'true'
        - 'false'
  workflow_call:
    inputs:
      aks_resource_group:
        type: string
        description: "Name of the AKS resource group"
        required: true
      aks_cluster_name:
        type: string
        description: "Name of the AKS cluster"
        required: true
    secrets:
      octopus_api_key:
        description: "API key of the Octopus server"
        required: true
      octopus_server_url:
        description: "URL of the Octopus server"
        required: true
      kubernetes_azure_credentials:
        description: 'Credentials of the Azure SP in json format: `{"clientId":"xxxxxxx","clientSecret":"XXXXXXXX","subscriptionId":"xxxxxx","tenantId":"xxxxx"}`'
        required: true

jobs:
  delete-octopus-environment:
    name: Delete a dynamic environment in Octopus
    if: github.event.ref_type == 'branch' || ${{ inputs.delete }} == 'true'
    runs-on: self-hosted
    steps:
    - name: Get environment name from branch name
      uses: planday-corp/actions-environment-name-sanitation@v1
      id: get_environment_name
    - uses: planday-corp/actions-octopus-environment-config@v2
      with:
        environment_name: "${{steps.get_environment_name.outputs.environment_name}}"
        delete_environment: true
        environment_to_copy: "stable"
        octopus_server_url: ${{ secrets.octopus_server_url }}
        octopus_api_key: ${{ secrets.octopus_api_key }}
  
  delete-kubernetes-resources:
    name: Delete associated resources in Kubernetes
    if: github.event.ref_type == 'branch' || ${{ inputs.delete }} == 'true'
    runs-on: self-hosted
    needs: ["delete-octopus-environment"]
    steps:
    - name: Get environment name from branch name
      uses: planday-corp/actions-environment-name-sanitation@v1
      id: get_environment_name
    # ref: https://learn.microsoft.com/en-us/cli/azure/install-azure-cli-linux?pivots=apt#option-1-install-with-one-command
    - name: Install azure cli
      run: |
        which az || { curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash ; }
    
    - uses: Azure/setup-kubectl@v3
      with:
        version: 'v1.22.11'

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.kubernetes_azure_credentials }}
    
    - uses: azure/aks-set-context@v3
      with:
        resource-group: ${{inputs.aks_resource_group}}
        cluster-name: ${{inputs.aks_cluster_name}}
        admin: 'true'
    
    - name: Delete Kubernetes namespace
      run: |
        kubectl get namespace ${{steps.get_environment_name.outputs.environment_name}} || \
        {
          echo '::warning:: Namespace ${{steps.get_environment_name.outputs.environment_name}} does not exists';
          exit 0;
        }
        
        kubectl delete namespace "${{steps.get_environment_name.outputs.environment_name}}"